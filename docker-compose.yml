services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: beton_app_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: beton_app
      POSTGRES_USER: beton_user
      POSTGRES_PASSWORD: beton_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - beton_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U beton_user -d beton_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: beton_app_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://beton_user:beton_password@db:5432/beton_app?schema=public
      JWT_SECRET: devSecretJwtKey_BetonPlant2025
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_SECRET: devSecretJwtRefresh_BetonPlant2025
      JWT_REFRESH_EXPIRES_IN: 7d
      PORT: 4000
      NODE_ENV: production
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - beton_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend PWA
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: beton_app_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - beton_network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  beton_network:
    driver: bridge
