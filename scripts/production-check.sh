#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ BetonApp –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏
PASSED=0
FAILED=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
check_pass() {
    echo -e "${GREEN}‚úÖ PASS${NC} $1"
    ((PASSED++))
}

check_fail() {
    echo -e "${RED}‚ùå FAIL${NC} $1"
    ((FAILED++))
}

check_warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  WARN${NC} $1"
    ((WARNINGS++))
}

check_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  INFO${NC} $1"
}

echo "=================================="
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -f "backend/.env.production" ]; then
    check_pass "–ü—Ä–æ–¥–∞–∫—à–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è backend –Ω–∞–π–¥–µ–Ω–∞"
else
    check_fail "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç backend/.env.production"
fi

if [ -f "frontend/.env.production" ]; then
    check_pass "–ü—Ä–æ–¥–∞–∫—à–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è frontend –Ω–∞–π–¥–µ–Ω–∞"
else
    check_fail "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç frontend/.env.production"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π
if [ -f "backend/.env.production" ]; then
    if grep -q "CHANGE_THIS" backend/.env.production; then
        check_fail "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –≤ backend/.env.production"
    else
        check_pass "–°–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –≤ backend/.env.production –∏–∑–º–µ–Ω–µ–Ω—ã"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -f "backend/prisma/schema.prisma" ]; then
    if grep -q "betonapp_production" backend/prisma/schema.prisma; then
        check_pass "–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
    else
        check_warn "–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
    fi
else
    check_fail "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
fi

echo ""
echo "=================================="
echo "üèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ backend
if [ -d "backend/dist" ]; then
    check_pass "Backend —Å–æ–±—Ä–∞–Ω"
else
    check_fail "Backend –Ω–µ —Å–æ–±—Ä–∞–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend && npm run build)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏ frontend
if [ -d "frontend/dist" ]; then
    check_pass "Frontend —Å–æ–±—Ä–∞–Ω"
else
    check_fail "Frontend –Ω–µ —Å–æ–±—Ä–∞–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npm run build)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
if [ -d "frontend/android" ]; then
    check_pass "Android –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω"
else
    check_warn "Android –ø—Ä–æ–µ–∫—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npx cap add android)"
fi

if [ -d "frontend/ios" ]; then
    check_pass "iOS –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω"
else
    check_warn "iOS –ø—Ä–æ–µ–∫—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω (–∑–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npx cap add ios)"
fi

echo ""
echo "=================================="
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤
if [ -f "docker-compose.production.yml" ]; then
    check_pass "Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞"
else
    check_fail "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç docker-compose.production.yml"
fi

if [ -f "backend/Dockerfile.production" ]; then
    check_pass "Backend Dockerfile –Ω–∞–π–¥–µ–Ω"
else
    check_fail "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç backend/Dockerfile.production"
fi

if [ -f "frontend/Dockerfile.production" ]; then
    check_pass "Frontend Dockerfile –Ω–∞–π–¥–µ–Ω"
else
    check_fail "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç frontend/Dockerfile.production"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if command -v docker &> /dev/null; then
    check_pass "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    if docker info &> /dev/null; then
        check_pass "Docker –∑–∞–ø—É—â–µ–Ω"
    else
        check_fail "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    fi
else
    check_warn "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
if command -v docker-compose &> /dev/null; then
    check_pass "Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    check_warn "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""
echo "=================================="
echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
if [ -d "nginx/ssl" ]; then
    if [ -f "nginx/ssl/cert.pem" ] && [ -f "nginx/ssl/key.pem" ]; then
        check_pass "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã"
    else
        check_fail "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ nginx/ssl/"
    fi
else
    check_fail "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è nginx/ssl –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
if [ -f "backend/.env.production" ]; then
    PERMS=$(stat -c "%a" backend/.env.production 2>/dev/null || stat -f "%A" backend/.env.production 2>/dev/null)
    if [ "$PERMS" = "600" ]; then
        check_pass "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ .env.production –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    else
        check_warn "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∞ 600 –¥–ª—è backend/.env.production"
    fi
fi

echo ""
echo "=================================="
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    check_pass "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
else
    check_fail "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
if command -v npm &> /dev/null; then
    NPM_VERSION=$(npm --version)
    check_pass "npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NPM_VERSION"
else
    check_fail "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
if command -v psql &> /dev/null; then
    PSQL_VERSION=$(psql --version | head -n1)
    check_pass "PostgreSQL CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PSQL_VERSION"
else
    check_warn "PostgreSQL CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""
echo "=================================="
echo "üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Capacitor
if [ -f "frontend/capacitor.config.ts" ]; then
    check_pass "Capacitor –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    check_fail "Capacitor –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Android SDK (–µ—Å–ª–∏ –µ—Å—Ç—å)
if [ -n "$ANDROID_HOME" ]; then
    check_pass "Android SDK –Ω–∞—Å—Ç—Ä–æ–µ–Ω: $ANDROID_HOME"
else
    check_warn "Android SDK –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è ANDROID_HOME)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Xcode (—Ç–æ–ª—å–∫–æ –Ω–∞ macOS)
if [[ "$OSTYPE" == "darwin"* ]]; then
    if command -v xcodebuild &> /dev/null; then
        XCODE_VERSION=$(xcodebuild -version | head -n1)
        check_pass "Xcode —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $XCODE_VERSION"
    else
        check_warn "Xcode –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
fi

echo ""
echo "=================================="
echo "üìã –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç"
echo "=================================="

echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED${NC}"
echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS${NC}"
echo -e "${RED}‚ùå –û—à–∏–±–æ–∫: $FAILED${NC}"

echo ""

if [ $FAILED -eq 0 ]; then
    if [ $WARNINGS -eq 0 ]; then
        echo -e "${GREEN}üéâ –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!${NC}"
        echo ""
        echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
        echo "1. –†–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: docker-compose -f docker-compose.production.yml up -d"
        echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É: curl -f http://localhost/health"
        echo "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:3001 (Grafana)"
        exit 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏${NC}"
        echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º"
        exit 0
    fi
else
    echo -e "${RED}‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É!${NC}"
    echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ–º"
    exit 1
fi