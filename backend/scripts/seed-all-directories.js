const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function seedAllDirectories() {
  try {
    console.log('üå± –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');

    // ===== –ö–û–ù–¢–†–ê–ì–ï–ù–¢–´ =====
    const counterparties = [
      {
        name: '–û–û–û "–°—Ç—Ä–æ–π–ú–∏—Ä"',
        fullName: '–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é "–°—Ç—Ä–æ–π–ú–∏—Ä"',
        type: 'client',
        contactPerson: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
        phone: '+7 (777) 123-45-67',
        email: 'ivanov@stroymir.kz',
        address: '–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ê–±–∞—è, 150',
        inn: '123456789012',
        kpp: '123456789',
        bankAccount: 'KZ123456789012345678',
        notes: '–ö—Ä—É–ø–Ω—ã–π –∫–ª–∏–µ–Ω—Ç, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã',
      },
      {
        name: '–¢–û–û "–ë–µ—Ç–æ–Ω–°–µ—Ä–≤–∏—Å"',
        fullName: '–¢–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é "–ë–µ—Ç–æ–Ω–°–µ—Ä–≤–∏—Å"',
        type: 'supplier',
        contactPerson: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á',
        phone: '+7 (707) 987-65-43',
        email: 'petrov@betonservice.kz',
        address: '–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –°–∞–∏–Ω–∞, 200',
        inn: '987654321098',
        kpp: '987654321',
        bankAccount: 'KZ987654321098765432',
        notes: '–ù–∞–¥–µ–∂–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ —Ü–µ–º–µ–Ω—Ç–∞ –∏ –¥–æ–±–∞–≤–æ–∫',
      },
      {
        name: '–ò–ü "–°–º–∏—Ä–Ω–æ–≤"',
        fullName: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –°–º–∏—Ä–Ω–æ–≤ –ê.–í.',
        type: 'client',
        contactPerson: '–°–º–∏—Ä–Ω–æ–≤ –ê–ª–µ–∫—Å–µ–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á',
        phone: '+7 (701) 555-66-77',
        email: 'smirnov@mail.kz',
        address: '–≥. –ê–ª–º–∞—Ç—ã, –º–∫—Ä. –û—Ä–±–∏—Ç–∞-3, 10',
        inn: '111222333444',
        notes: '–ß–∞—Å—Ç–Ω—ã–π –∑–∞—Å—Ç—Ä–æ–π—â–∏–∫',
      },
    ];

    for (const counterparty of counterparties) {
      try {
        await prisma.counterparty.create({
          data: {
            ...counterparty,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        console.log(`‚úÖ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç "${counterparty.name}" —Å–æ–∑–¥–∞–Ω`);
      } catch (error) {
        if (error.code === 'P2002') {
          console.log(`‚ö†Ô∏è  –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç "${counterparty.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          throw error;
        }
      }
    }

    // ===== –ú–ê–†–ö–ò –ë–ï–¢–û–ù–ê =====
    const concreteGrades = [
      {
        name: '–ú100',
        description: '–õ–µ–≥–∫–∏–π –±–µ—Ç–æ–Ω –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç',
        strength: 'B7.5',
        mobility: '–ü2-–ü4',
        frostResistance: 'F50',
        waterResistance: 'W2',
        price: 15000,
      },
      {
        name: '–ú150',
        description: '–î–ª—è —Å—Ç—è–∂–µ–∫ –∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤ –ø–æ–¥ –ª–µ–≥–∫–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
        strength: 'B10',
        mobility: '–ü2-–ü4',
        frostResistance: 'F75',
        waterResistance: 'W4',
        price: 18000,
      },
      {
        name: '–ú200',
        description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–µ—Ç–æ–Ω –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤, —Å—Ç—è–∂–µ–∫, –¥–æ—Ä–æ–∂–µ–∫',
        strength: 'B15',
        mobility: '–ü2-–ü4',
        frostResistance: 'F100',
        waterResistance: 'W4',
        price: 21000,
      },
      {
        name: '–ú250',
        description: '–î–ª—è –º–æ–Ω–æ–ª–∏—Ç–Ω—ã—Ö —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤, –ø–ª–∏—Ç –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π, –ª–µ—Å—Ç–Ω–∏—Ü',
        strength: 'B20',
        mobility: '–ü2-–ü4',
        frostResistance: 'F150',
        waterResistance: 'W6',
        price: 24000,
      },
      {
        name: '–ú300',
        description: '–í—ã—Å–æ–∫–æ–ø—Ä–æ—á–Ω—ã–π –±–µ—Ç–æ–Ω –¥–ª—è –Ω–µ—Å—É—â–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –¥–æ—Ä–æ–≥',
        strength: 'B22.5',
        mobility: '–ü2-–ü4',
        frostResistance: 'F200',
        waterResistance: 'W6',
        price: 27000,
      },
    ];

    for (const grade of concreteGrades) {
      try {
        await prisma.concreteGrade.create({
          data: {
            ...grade,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        console.log(`‚úÖ –ú–∞—Ä–∫–∞ –±–µ—Ç–æ–Ω–∞ "${grade.name}" —Å–æ–∑–¥–∞–Ω–∞`);
      } catch (error) {
        if (error.code === 'P2002') {
          console.log(`‚ö†Ô∏è  –ú–∞—Ä–∫–∞ –±–µ—Ç–æ–Ω–∞ "${grade.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          throw error;
        }
      }
    }

    // ===== –°–ö–õ–ê–î–´ =====
    const warehouses = [
      {
        name: '–°–∫–ª–∞–¥ ‚Ññ1 (–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π)',
        address: '–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, 1',
        capacity: 1000,
        currentStock: 750,
        phone: '+7 (777) 111-22-33',
      },
      {
        name: '–°–∫–ª–∞–¥ ‚Ññ2 (–°–µ–≤–µ—Ä–Ω—ã–π)',
        address: '–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –°–µ–≤–µ—Ä–Ω–∞—è, 50',
        capacity: 800,
        currentStock: 600,
        phone: '+7 (701) 222-33-44',
      },
      {
        name: '–°–∫–ª–∞–¥ ‚Ññ3 (–Æ–∂–Ω—ã–π)',
        address: '–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –Æ–∂–Ω–∞—è, 120',
        capacity: 600,
        currentStock: 400,
        phone: '+7 (777) 333-44-55',
      },
    ];

    for (const warehouse of warehouses) {
      try {
        await prisma.warehouse.create({
          data: {
            ...warehouse,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        console.log(`‚úÖ –°–∫–ª–∞–¥ "${warehouse.name}" —Å–æ–∑–¥–∞–Ω`);
      } catch (error) {
        if (error.code === 'P2002') {
          console.log(`‚ö†Ô∏è  –°–∫–ª–∞–¥ "${warehouse.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          throw error;
        }
      }
    }

    // ===== –ú–ê–¢–ï–†–ò–ê–õ–´ =====
    const materials = [
      {
        name: '–¶–µ–º–µ–Ω—Ç –ü–¶ 400',
        type: 'cement',
        unit: 'ton',
        price: 45000,
        supplier: '–¢–û–û "–¶–µ–º–µ–Ω—Ç–ü—Ä–æ–º"',
        description: '–ü–æ—Ä—Ç–ª–∞–Ω–¥—Ü–µ–º–µ–Ω—Ç –º–∞—Ä–∫–∏ 400',
      },
      {
        name: '–ü–µ—Å–æ–∫ —Ä–µ—á–Ω–æ–π',
        type: 'sand',
        unit: 'm3',
        price: 8000,
        supplier: '–¢–û–û "–ü–µ—Å–æ–∫–ö–∞—Ä—å–µ—Ä"',
        description: '–ú—ã—Ç—ã–π —Ä–µ—á–Ω–æ–π –ø–µ—Å–æ–∫',
      },
      {
        name: '–©–µ–±–µ–Ω—å –≥—Ä–∞–Ω–∏—Ç–Ω—ã–π',
        type: 'gravel',
        unit: 'm3',
        price: 12000,
        supplier: '–¢–û–û "–©–µ–±–µ–Ω—å–ü–ª—é—Å"',
        description: '–§—Ä–∞–∫—Ü–∏—è 5-20 –º–º',
      },
      {
        name: '–í–æ–¥–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è',
        type: 'water',
        unit: 'liter',
        price: 50,
        supplier: '–ì–æ—Ä–í–æ–¥–æ–ö–∞–Ω–∞–ª',
        description: '–í–æ–¥–∞ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –Ω—É–∂–¥',
      },
      {
        name: '–ü–ª–∞—Å—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –°-3',
        type: 'additive',
        unit: 'kg',
        price: 500,
        supplier: '–¢–û–û "–•–∏–º–î–æ–±–∞–≤–∫–∏"',
        description: '–ü–ª–∞—Å—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∞—è –¥–æ–±–∞–≤–∫–∞',
      },
    ];

    for (const material of materials) {
      try {
        await prisma.material.create({
          data: {
            ...material,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        console.log(`‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª "${material.name}" —Å–æ–∑–¥–∞–Ω`);
      } catch (error) {
        if (error.code === 'P2002') {
          console.log(`‚ö†Ô∏è  –ú–∞—Ç–µ—Ä–∏–∞–ª "${material.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          throw error;
        }
      }
    }

    // ===== –¢–†–ê–ù–°–ü–û–†–¢ =====
    const transports = [
      {
        name: '–ú–∏–∫—Å–µ—Ä ‚Ññ1',
        type: 'mixer',
        model: '–ö–ê–ú–ê–ó-53228',
        licensePlate: '123ABC01',
        capacity: 7.0,
        year: 2020,
        vin: 'X9F12345678901234',
        status: 'active',
        notes: '–û—Å–Ω–æ–≤–Ω–æ–π –º–∏–∫—Å–µ—Ä –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –±–µ—Ç–æ–Ω–∞',
      },
      {
        name: '–ú–∏–∫—Å–µ—Ä ‚Ññ2',
        type: 'mixer',
        model: '–ö–ê–ú–ê–ó-53228',
        licensePlate: '456DEF02',
        capacity: 7.0,
        year: 2019,
        vin: 'X9F98765432109876',
        status: 'active',
        notes: '–†–µ–∑–µ—Ä–≤–Ω—ã–π –º–∏–∫—Å–µ—Ä',
      },
      {
        name: '–ì—Ä—É–∑–æ–≤–∏–∫ ‚Ññ1',
        type: 'truck',
        model: '–ó–ò–õ-130',
        licensePlate: '789GHI03',
        capacity: 5.0,
        year: 2018,
        status: 'maintenance',
        notes: '–ù–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏',
      },
      {
        name: '–ö—Ä–∞–Ω ‚Ññ1',
        type: 'crane',
        model: '–ö–°-3577',
        licensePlate: '012JKL04',
        capacity: 16.0,
        year: 2021,
        status: 'active',
        notes: '–ê–≤—Ç–æ–∫—Ä–∞–Ω –¥–ª—è –ø–æ–¥—ä–µ–º–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
      },
    ];

    for (const transport of transports) {
      try {
        await prisma.transport.create({
          data: {
            ...transport,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        console.log(`‚úÖ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç "${transport.name}" —Å–æ–∑–¥–∞–Ω`);
      } catch (error) {
        if (error.code === 'P2002') {
          console.log(`‚ö†Ô∏è  –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç "${transport.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          throw error;
        }
      }
    }

    // ===== –í–û–î–ò–¢–ï–õ–ò =====
    const drivers = [
      {
        name: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
        fullName: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
        phone: '+7 (777) 111-11-11',
        login: 'driver1',
        tempPassword: 'temp123',
        hasChangedPassword: false,
        licenseNumber: '1234567890',
        licenseExpiry: new Date('2025-12-31'),
        vehicleIds: [],
        status: 'active',
      },
      {
        name: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.',
        fullName: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á',
        phone: '+7 (777) 222-22-22',
        login: 'driver2',
        tempPassword: 'temp456',
        hasChangedPassword: false,
        licenseNumber: '0987654321',
        licenseExpiry: new Date('2026-06-15'),
        vehicleIds: [],
        status: 'active',
      },
      {
        name: '–°–∏–¥–æ—Ä–æ–≤ –°.–°.',
        fullName: '–°–∏–¥–æ—Ä–æ–≤ –°–µ—Ä–≥–µ–π –°–µ—Ä–≥–µ–µ–≤–∏—á',
        phone: '+7 (777) 333-33-33',
        login: 'driver3',
        tempPassword: 'temp789',
        hasChangedPassword: false,
        licenseNumber: '1122334455',
        licenseExpiry: new Date('2025-03-20'),
        status: 'vacation',
      },
    ];

    for (const driver of drivers) {
      try {
        await prisma.driver.create({
          data: {
            ...driver,
            createdAt: new Date(),
            updatedAt: new Date()
          }
        });
        console.log(`‚úÖ –í–æ–¥–∏—Ç–µ–ª—å "${driver.name}" —Å–æ–∑–¥–∞–Ω`);
      } catch (error) {
        if (error.code === 'P2002') {
          console.log(`‚ö†Ô∏è  –í–æ–¥–∏—Ç–µ–ª—å "${driver.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          throw error;
        }
      }
    }

    console.log('\nüéâ –í—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!');
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–æ:');
    console.log(`- –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã: ${counterparties.length}`);
    console.log(`- –ú–∞—Ä–∫–∏ –±–µ—Ç–æ–Ω–∞: ${concreteGrades.length}`);
    console.log(`- –°–∫–ª–∞–¥—ã: ${warehouses.length}`);
    console.log(`- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: ${materials.length}`);
    console.log(`- –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: ${transports.length}`);
    console.log(`- –í–æ–¥–∏—Ç–µ–ª–∏: ${drivers.length}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedAllDirectories();
