const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function clearDirectories() {
  try {
    console.log('üßπ –û—á–∏—â–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏...');

    // –£–¥–∞–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã)
    await prisma.driver.deleteMany();
    console.log('‚úÖ –í–æ–¥–∏—Ç–µ–ª–∏ –æ—á–∏—â–µ–Ω—ã');

    await prisma.transport.deleteMany();
    console.log('‚úÖ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –æ—á–∏—â–µ–Ω');

    await prisma.material.deleteMany();
    console.log('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—á–∏—â–µ–Ω—ã');

    await prisma.warehouse.deleteMany();
    console.log('‚úÖ –°–∫–ª–∞–¥—ã –æ—á–∏—â–µ–Ω—ã');

    await prisma.concreteGrade.deleteMany();
    console.log('‚úÖ –ú–∞—Ä–∫–∏ –±–µ—Ç–æ–Ω–∞ –æ—á–∏—â–µ–Ω—ã');

    await prisma.counterparty.deleteMany();
    console.log('‚úÖ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã –æ—á–∏—â–µ–Ω—ã');

    console.log('üéâ –í—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –æ—á–∏—â–µ–Ω—ã!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤:', error);
  } finally {
    await prisma.$disconnect();
  }
}

clearDirectories();

