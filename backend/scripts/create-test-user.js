const { PrismaClient } = require('@prisma/client');
const bcrypt = require('bcrypt');

const prisma = new PrismaClient({
  datasources: {
    db: {
      url: process.env.DATABASE_URL
    }
  }
});

async function createTestUser() {
  try {
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    const password = 'developer123';
    const passwordHash = await bcrypt.hash(password, 10);
    
    const user = await prisma.user.create({
      data: {
        login: 'developer',
        password_hash: passwordHash,
        role: 'developer',
        updatedAt: new Date()
      }
    });
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üë§ –õ–æ–≥–∏–Ω: ${user.login}`);
    console.log(`üîë –ü–∞—Ä–æ–ª—å: ${password}`);
    console.log(`üé≠ –†–æ–ª—å: ${user.role}`);
    console.log(`üÜî ID: ${user.id}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestUser();
