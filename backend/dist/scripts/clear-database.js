"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const client_1 = require("@prisma/client");
const prisma = new client_1.PrismaClient();
async function clearDatabase() {
    console.log('üóëÔ∏è –ù–ê–ß–ò–ù–ê–ï–¢–°–Ø –û–ß–ò–°–¢–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•...');
    try {
        const developer = await prisma.user.findUnique({
            where: { login: 'developer' }
        });
        if (!developer) {
            console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            return;
        }
        console.log(`üë§ –ù–∞–π–¥–µ–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: ${developer.login} (${developer.role})`);
        console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        await prisma.user.deleteMany({});
        console.log('üë§ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞...');
        await prisma.user.create({
            data: {
                id: developer.id,
                login: developer.login,
                password_hash: developer.password_hash,
                role: developer.role,
                updatedAt: new Date(),
            },
        });
        console.log('‚úÖ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù–ê!');
        console.log('üë§ –û—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫');
        console.log('üîë –õ–æ–≥–∏–Ω: developer');
        console.log('üîë –ü–∞—Ä–æ–ª—å: developer123');
    }
    catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    }
    finally {
        await prisma.$disconnect();
    }
}
clearDatabase();
//# sourceMappingURL=clear-database.js.map