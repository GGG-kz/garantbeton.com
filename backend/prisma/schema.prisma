generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  login         String   @unique
  password_hash String
  role          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime

  @@map("users")
}

model Driver {
  id                 String   @id @default(cuid())
  name               String
  fullName           String
  phone              String
  login              String   @unique
  tempPassword       String?
  hasChangedPassword Boolean  @default(false)
  licenseNumber      String?  // номер водительского удостоверения
  licenseExpiry      DateTime?
  vehicleIds         String[] // ID транспорта, которым может управлять
  status             String   @default("active") // 'active' | 'sick' | 'vacation' | 'inactive'
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("drivers")
}

model InternalRequest {
  id              String   @id @default(cuid())
  title           String
  description     String
  category        String
  priority        String   // 'low' | 'medium' | 'high' | 'urgent'
  status          String   // 'pending' | 'in_progress' | 'completed' | 'cancelled'
  userId          String
  userName        String
  userRole        String
  supplierDetails String?  // JSON string
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("internal_requests")
}

model ConcreteOrder {
  id                String   @id @default(cuid())
  orderNumber       String   @unique
  customerName      String
  customerPhone     String
  customerAddress   String
  concreteGrade     String
  quantity          Float
  price             Float
  totalAmount       Float
  status            String   // 'pending' | 'confirmed' | 'in_progress' | 'completed' | 'cancelled'
  deliveryDate      DateTime
  notes             String?
  createdBy         String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("concrete_orders")
}

model Counterparty {
  id           String   @id @default(cuid())
  name         String   @unique
  fullName     String
  type         String   // 'client' | 'supplier'
  contactPerson String?
  phone        String?
  email        String?
  address      String?
  inn          String?
  kpp          String?
  bankAccount  String?
  notes        String?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("counterparties")
}

model ConcreteGrade {
  id              String   @id @default(cuid())
  name            String   @unique
  description     String
  strength        String
  mobility        String
  frostResistance String
  waterResistance String
  price           Float
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("concrete_grades")
}

model Warehouse {
  id           String   @id @default(cuid())
  name         String   @unique
  address      String
  capacity     Float
  currentStock Float
  phone        String
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("warehouses")
}

model Material {
  id          String   @id @default(cuid())
  name        String   @unique
  type        String   // 'cement' | 'sand' | 'gravel' | 'water' | 'additive' | 'other'
  unit        String   // 'kg' | 'ton' | 'm3' | 'liter' | 'piece'
  price       Float
  supplier    String?
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("materials")
}

model Transport {
  id            String   @id @default(cuid())
  name          String   @unique
  type          String   // 'truck' | 'mixer' | 'crane' | 'loader' | 'other'
  model         String
  licensePlate  String   @unique
  capacity      Float?   // в тоннах или м3
  year          Int?
  vin           String?  // VIN номер
  status        String   @default("active") // 'active' | 'maintenance' | 'inactive'
  driverId      String?  // текущий водитель
  notes         String?
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("transports")
}

