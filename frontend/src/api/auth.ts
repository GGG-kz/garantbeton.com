import { apiClient } from './client'
import { AuthResponse, LoginRequest, RegisterRequest, User } from '../types/auth'

export const authApi = {
  login: async (credentials: LoginRequest): Promise<AuthResponse> => {
    console.log('üîê Attempting login with:', credentials)
    console.log('üåê API Client base URL:', apiClient.defaults.baseURL)
    try {
      const response = await apiClient.post('/auth/login', credentials)
      console.log('‚úÖ Login successful:', response.data)
      return response.data
    } catch (error: any) {
      console.error('‚ùå Login failed:', error.response?.data || error.message)
      console.error('üîç Full error:', error)
      throw error
    }
  },

  register: async (userData: RegisterRequest): Promise<AuthResponse> => {
    const response = await apiClient.post('/auth/register', userData)
    return response.data
  },

  refreshToken: async (refreshToken: string): Promise<{ accessToken: string }> => {
    const response = await apiClient.post('/auth/refresh', { refreshToken })
    return response.data
  },

  getProfile: async (): Promise<User> => {
    const response = await apiClient.get('/auth/profile')
    return response.data
  },

  // –í—Ö–æ–¥ –¥–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π
  driverLogin: async (credentials: LoginRequest): Promise<AuthResponse> => {
    const response = await apiClient.post('/auth/driver/login', credentials)
    return response.data
  },

  // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–¥–∏—Ç–µ–ª—è
  registerDriver: async (driverData: any): Promise<{ message: string }> => {
    console.log('üöó –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤–æ–¥–∏—Ç–µ–ª—è:', driverData)
    try {
      const response = await apiClient.post('/auth/driver/register', driverData)
      console.log('‚úÖ –í–æ–¥–∏—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', response.data)
      return response.data
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–¥–∏—Ç–µ–ª—è:', error.response?.data || error.message)
      throw error
    }
  },
}
