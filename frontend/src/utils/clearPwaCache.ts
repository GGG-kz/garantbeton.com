/**
 * –û—á–∏—Å—Ç–∫–∞ PWA –∫—ç—à–∞ –∏ Service Worker
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */

export const clearPwaCache = async () => {
  console.log('üßπ –û–ß–ò–°–¢–ö–ê PWA –ö–≠–®–ê...')
  
  try {
    // –û—á–∏—â–∞–µ–º localStorage
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ localStorage...')
    localStorage.clear()
    
    // –û—á–∏—â–∞–µ–º sessionStorage
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ sessionStorage...')
    sessionStorage.clear()
    
    // –û—á–∏—â–∞–µ–º IndexedDB (–µ—Å–ª–∏ –µ—Å—Ç—å)
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ IndexedDB...')
    if ('indexedDB' in window) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        const databases = await indexedDB.databases()
        for (const db of databases) {
          if (db.name) {
            indexedDB.deleteDatabase(db.name)
            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${db.name}`)
          }
        }
      } catch (error) {
        console.log('‚ÑπÔ∏è IndexedDB –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞')
      }
    }
    
    // –û—á–∏—â–∞–µ–º –∫—ç—à–∏
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–µ–π...')
    if ('caches' in window) {
      const cacheNames = await caches.keys()
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫—ç—à–µ–π: ${cacheNames.length}`)
      
      for (const cacheName of cacheNames) {
        await caches.delete(cacheName)
        console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω –∫—ç—à: ${cacheName}`)
      }
    }
    
    // –û—Ç–∫–ª—é—á–∞–µ–º Service Worker
    console.log('üóëÔ∏è –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Service Worker...')
    if ('serviceWorker' in navigator) {
      const registrations = await navigator.serviceWorker.getRegistrations()
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ Service Workers: ${registrations.length}`)
      
      for (const registration of registrations) {
        await registration.unregister()
        console.log(`üóëÔ∏è –û—Ç–∫–ª—é—á–µ–Ω Service Worker: ${registration.scope}`)
      }
    }
    
    console.log('‚úÖ PWA –ö–≠–® –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù!')
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...')
    setTimeout(() => {
      window.location.reload()
    }, 1000)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ PWA –∫—ç—à–∞:', error)
  }
}

export const checkPwaCache = async () => {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê PWA –ö–≠–®–ê...')
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
    const localStorageKeys = Object.keys(localStorage)
    console.log(`üìä localStorage –∫–ª—é—á–µ–π: ${localStorageKeys.length}`)
    localStorageKeys.forEach(key => console.log(`  - ${key}`))
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage
    const sessionStorageKeys = Object.keys(sessionStorage)
    console.log(`üìä sessionStorage –∫–ª—é—á–µ–π: ${sessionStorageKeys.length}`)
    sessionStorageKeys.forEach(key => console.log(`  - ${key}`))
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º IndexedDB
    if ('indexedDB' in window) {
      try {
        const databases = await indexedDB.databases()
        console.log(`üìä IndexedDB –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö: ${databases.length}`)
        databases.forEach(db => console.log(`  - ${db.name}`))
      } catch (error) {
        console.log('‚ÑπÔ∏è IndexedDB –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏
    if ('caches' in window) {
      const cacheNames = await caches.keys()
      console.log(`üìä –ö—ç—à–µ–π: ${cacheNames.length}`)
      cacheNames.forEach(name => console.log(`  - ${name}`))
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Service Workers
    if ('serviceWorker' in navigator) {
      const registrations = await navigator.serviceWorker.getRegistrations()
      console.log(`üìä Service Workers: ${registrations.length}`)
      registrations.forEach(reg => console.log(`  - ${reg.scope}`))
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ PWA –∫—ç—à–∞:', error)
  }
}

export const forceClearAll = async () => {
  console.log('üí• –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –í–°–ï–ì–û...')
  
  await clearPwaCache()
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º cookies
  document.cookie.split(";").forEach(cookie => {
    const eqPos = cookie.indexOf("=")
    const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie
    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`
    document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;domain=${window.location.hostname}`
  })
  
  console.log('‚úÖ –í–°–ï –î–ê–ù–ù–´–ï –£–î–ê–õ–ï–ù–´!')
}

