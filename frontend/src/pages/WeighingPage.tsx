import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuthStore } from '../stores/authStore';
import { UserRole } from '../types/auth';
import { useLocalStorage } from '../hooks/useLocalStorage';
import { WeighingDraft, WeighingStats } from '../types/weighing';
import ArrivalWeighing from '../components/weighing/ArrivalWeighing';
import DepartureWeighing from '../components/weighing/DepartureWeighing';

type WeighingMode = 'arrival' | 'departure';

const WeighingPage: React.FC = () => {
  const navigate = useNavigate();
  const { user } = useAuthStore();
  const [mode, setMode] = useState<WeighingMode>('arrival');
  const [drafts, setDrafts] = useLocalStorage<WeighingDraft[]>('weighingDrafts', []);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ—Å–æ–≤
  const [isConnected, setIsConnected] = useState(false);
  const [currentWeight, setCurrentWeight] = useState<number | null>(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  useEffect(() => {
    if (user && ![UserRole.ADMIN, UserRole.DEVELOPER, UserRole.DISPATCHER, UserRole.OPERATOR].includes(user.role)) {
      navigate('/dashboard');
    }
  }, [user, navigate]);

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const stats: WeighingStats = {
    totalDrafts: drafts.length,
    completedWeighings: drafts.filter(d => d.status === 'completed').length,
    pendingDrafts: drafts.filter(d => d.status === 'draft').length,
    totalWeight: drafts.filter(d => d.status === 'completed' && d.netWeight).reduce((sum, d) => sum + (d.netWeight || 0), 0),
    averageWeight: 0
  };

  if (stats.completedWeighings > 0) {
    stats.averageWeight = stats.totalWeight / stats.completedWeighings;
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–µ—Å–∞–º
  const connectToScales = async () => {
    setIsLoading(true);
    setError(null);
    
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≤–µ—Å–∞–º
      // –ü–æ–∫–∞ —á—Ç–æ —Å–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      await new Promise(resolve => setTimeout(resolve, 1000));
      setIsConnected(true);
    } catch (err) {
      setError(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      setIsConnected(false);
    } finally {
      setIsLoading(false);
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Å–∞ —Å —Ä–µ–∞–ª—å–Ω—ã—Ö –≤–µ—Å–æ–≤
  const getWeight = async () => {
    if (!isConnected) {
      setError('–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–µ—Å–∞–º');
      return;
    }

    setIsLoading(true);
    try {
      // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Å–∞ —Å –≤–µ—Å–æ–≤
      // await getWeightFromScales()
      setError('–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Å–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Ä–µ–∞–ª—å–Ω—ã–º –≤–µ—Å–∞–º');
    } catch (err) {
      setError(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Å–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setIsLoading(false);
    }
  };

  if (!user) {
    return (
      <div className="min-h-screen bg-mono-50 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-mono-900">–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</h1>
          <p className="text-mono-600 mt-2">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-mono-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center space-x-4">
              <button
                onClick={() => navigate('/dashboard')}
                className="inline-flex items-center px-4 py-2 bg-mono-600 text-white rounded-lg hover:bg-mono-700 transition-colors"
              >
                ‚Üê –ù–∞–∑–∞–¥ –∫ Dashboard
              </button>
              
              <h1 className="text-2xl font-bold text-mono-900">
                ‚öñÔ∏è –°–∏—Å—Ç–µ–º–∞ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è
              </h1>
            </div>

            <div className="flex items-center space-x-4">
              <div className="text-sm text-mono-600">
                –û–ø–µ—Ä–∞—Ç–æ—Ä: <span className="font-medium">{user.fullName || user.login}</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
        <div className="mb-8">
          <div className="flex space-x-1 bg-mono-100 p-1 rounded-lg w-fit">
            <button
              onClick={() => setMode('arrival')}
              className={`px-6 py-3 rounded-md font-medium transition-colors ${
                mode === 'arrival'
                  ? 'bg-white text-black shadow-sm'
                  : 'text-mono-600 hover:text-mono-900'
              }`}
            >
              üöõ –í—ä–µ–∑–¥ (–ë—Ä—É—Ç—Ç–æ)
            </button>
            <button
              onClick={() => setMode('departure')}
              className={`px-6 py-3 rounded-md font-medium transition-colors ${
                mode === 'departure'
                  ? 'bg-white text-black shadow-sm'
                  : 'text-mono-600 hover:text-mono-900'
              }`}
            >
              üöö –í—ã–µ–∑–¥ (–¢–∞—Ä–∞)
            </button>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-mono-100 rounded-lg flex items-center justify-center">
                  <span className="text-black font-bold">üìã</span>
                </div>
              </div>
              <div className="ml-4">
                <div className="text-sm font-medium text-mono-500">–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π</div>
                <div className="text-2xl font-bold text-mono-900">{stats.totalDrafts}</div>
              </div>
            </div>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-mono-100 rounded-lg flex items-center justify-center">
                  <span className="text-mono-600 font-bold">‚úÖ</span>
                </div>
              </div>
              <div className="ml-4">
                <div className="text-sm font-medium text-mono-500">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
                <div className="text-2xl font-bold text-mono-900">{stats.completedWeighings}</div>
              </div>
            </div>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                  <span className="text-mono-600 font-bold">‚è≥</span>
                </div>
              </div>
              <div className="ml-4">
                <div className="text-sm font-medium text-mono-500">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</div>
                <div className="text-2xl font-bold text-mono-900">{stats.pendingDrafts}</div>
              </div>
            </div>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-sm border">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-mono-100 rounded-lg flex items-center justify-center">
                  <span className="text-black font-bold">‚öñÔ∏è</span>
                </div>
              </div>
              <div className="ml-4">
                <div className="text-sm font-medium text-mono-500">–û–±—â–∏–π –≤–µ—Å</div>
                <div className="text-2xl font-bold text-mono-900">
                  {stats.totalWeight.toFixed(0)} –∫–≥
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="bg-white rounded-lg shadow-sm border">
          <div className="p-6">
            {mode === 'arrival' ? (
              <ArrivalWeighing
                currentWeight={currentWeight}
                onWeightChange={setCurrentWeight}
                isConnected={isConnected}
                onConnect={connectToScales}
                onGetWeight={getWeight}
                isLoading={isLoading}
              />
            ) : (
              <DepartureWeighing
                currentWeight={currentWeight}
                onWeightChange={setCurrentWeight}
                isConnected={isConnected}
                onConnect={connectToScales}
                onGetWeight={getWeight}
                isLoading={isLoading}
              />
            )}

            {/* –û–±—â–∏–µ –æ—à–∏–±–∫–∏ */}
            {error && (
              <div className="mt-6 p-4 bg-red-50 border border-red-200 rounded-lg">
                <div className="flex items-center">
                  <span className="text-mono-600">‚ùå {error}</span>
                </div>
              </div>
            )}
          </div>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <div className="mt-8 bg-mono-50 border border-mono-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-black mb-4">
            üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø—Ä–æ—Ü–µ—Å—Å—É –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è
          </h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h4 className="font-medium text-black mb-2">üöõ –í—ä–µ–∑–¥ (–ë—Ä—É—Ç—Ç–æ):</h4>
              <ol className="text-sm text-black space-y-1 list-decimal list-inside">
                <li>–ù–∞–∂–∞—Ç—å ¬´–î–æ–±–∞–≤–∏—Ç—å¬ª ‚Üí —É–∫–∞–∑–∞—Ç—å –≥–æ—Å. –Ω–æ–º–µ—Ä</li>
                <li>–ù–∞–∂–∞—Ç—å ¬´–ë–†–£–¢–¢–û¬ª ‚Üí —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤–µ—Å + –¥–∞—Ç–∞/–≤—Ä–µ–º—è</li>
                <li>–ù–∞–∂–∞—Ç—å ¬´–°–æ—Ö—Ä–∞–Ω–∏—Ç—å (—á–µ—Ä–Ω–æ–≤–∏–∫)¬ª</li>
                <li>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–∞—à–∏–Ω</li>
              </ol>
            </div>
            
            <div>
              <h4 className="font-medium text-black mb-2">üöö –í—ã–µ–∑–¥ (–¢–∞—Ä–∞):</h4>
              <ol className="text-sm text-black space-y-1 list-decimal list-inside">
                <li>–û—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫ –ø–æ –Ω–æ–º–µ—Ä—É</li>
                <li>–ù–∞–∂–∞—Ç—å ¬´–¢–ê–†–ê¬ª ‚Üí —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤–µ—Å + –¥–∞—Ç–∞/–≤—Ä–µ–º—è</li>
                <li>–ó–∞–ø–æ–ª–Ω–∏—Ç—å: –ø–æ—Å—Ç–∞–≤—â–∏–∫, –ø–æ–ª—É—á–∞—Ç–µ–ª—å, –≥—Ä—É–∑</li>
                <li>–ù–µ—Ç—Ç–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: –±—Ä—É—Ç—Ç–æ ‚Äì —Ç–∞—Ä–∞</li>
                <li>–ù–∞–∂–∞—Ç—å ¬´–û–±–Ω–æ–≤–∏—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å¬ª</li>
              </ol>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WeighingPage;
