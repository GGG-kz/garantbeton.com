services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: beton_app_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: beton_app
      POSTGRES_USER: beton_user
      POSTGRES_PASSWORD: beton_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - beton_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U beton_user -d beton_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: beton_app_backend_dev
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://beton_user:beton_password@db:5432/beton_app?schema=public
      JWT_SECRET: devSecretJwtKey_BetonPlant2025
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_SECRET: devSecretJwtRefresh_BetonPlant2025
      JWT_REFRESH_EXPIRES_IN: 7d
      PORT: 4000
      NODE_ENV: development
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - beton_network_dev
    command: npm run start:dev

  # Frontend PWA (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: beton_app_frontend_dev
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:4000/api
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - beton_network_dev
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5173 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data_dev:

networks:
  beton_network_dev:
    driver: bridge
